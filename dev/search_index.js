var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = CountMatrices","category":"page"},{"location":"#CountMatrices","page":"Home","title":"CountMatrices","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for CountMatrices.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using CountMatrices\n\nusing FileIO\nusing GenomicFeatures # v3\nusing ColorSchemes\n\n# Define GenomicIntervals.\nintervals = [\n\tGenomicPosition(\"test1\", 1, 1),\n\tGenomicPosition(\"test2\", 2, 2),\n\tGenomicPosition(\"test3\", 1, 3),\n\tGenomicPosition(\"test3\", 3, 3),\n]\n\n# Define various genomic windows.\nwindows = [\n\tGenomicWindowCentred(GenomicPosition(\"test1\", 2), Vector{eltype(intervals)}(), 1),\n\tGenomicWindowCentred{1}(GenomicPosition(\"test2\", 2), Vector{eltype(intervals)}()),\n\tGenomicWindowCentred{1, Vector{eltype(intervals)}}(GenomicPosition(\"test3\", 2)),\n]\n\n# Collect intervals overlapping windows.\nfor (window, interval) in eachoverlap(windows, intervals)\n\tpush!(window, interval)\nend\n\n# Sort windows to place the most significant at the top of the data matrix.\nsort!(windows; by=window->sum(GenomicFeatures.volume, GenomicFeatures.metadata(window)), rev = true)\n\n# Splice windows into count matrix.\nM = CountMatrix(windows)\n\n# Sort windows to place the most significant at the top of the data matrix.\n# M.m .= sortslices(M.m, by = sum, dims = 2, rev = true)","category":"page"},{"location":"","page":"Home","title":"Home","text":"palette = ColorSchemes.balance","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Get RGBA matrix.\npath, io, c = CountMatrices.draw(M; palette, rangescale = :extrema, scale = log10)\n\n# Show RGBA matrix.\nc","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [CountMatrices]","category":"page"},{"location":"#CountMatrices.GenomicWindow","page":"Home","title":"CountMatrices.GenomicWindow","text":"Window with dynamic/variable left and right positions.\n\n\n\n\n\n","category":"type"},{"location":"#CountMatrices.GenomicWindowCentred","page":"Home","title":"CountMatrices.GenomicWindowCentred","text":"Window with fixed radius or width.\n\n\n\n\n\n","category":"type"},{"location":"#CountMatrices.radius-Union{Tuple{Type{GenomicWindowCentred{R, M, C}}}, Tuple{C}, Tuple{M}, Tuple{R}} where {R, M, C}","page":"Home","title":"CountMatrices.radius","text":"Radius of the window.\n\n\n\n\n\n","category":"method"}]
}
